package Service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.repository.CrudRepository;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import lombok.RequiredArgsConstructor;
import modele.Compte;
import repository.ComptRepository;

@SuppressWarnings({ "hiding" })
@Service
@RequiredArgsConstructor
public class UserService implements AppPhone{
 
	private  ComptRepository comptrepo;

	@Override
	public ResponseEntity<String> ModifierInfo(long idUser, Compte compte) {
		Optional<Compte> compt = comptrepo.findById(idUser);
		if(compt == null) {
			return new ResponseEntity<>(
			          "Id n'existe pas", 
			          HttpStatus.INTERNAL_SERVER_ERROR);//renvoie une erreur 500

		}
		
		if (compte.getUserName()!= null && compt.get().getUserName() != compte.getUserName()) {
					 compt.get().setUserName(compte.getUserName());
		}
						//return App.findById(idUser);
		comptrepo.saveAndFlush(compt.get());
		 return new ResponseEntity<>(
		          "Le compte a été modifié", 
		          HttpStatus.INTERNAL_SERVER_ERROR);
	}

	@Override
	public void ChangeLangue() {
		// TODO Auto-generated method stub
		
	}

	public void Transaction() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void ConsultSolde(long idUser,int Numero) {
		// TODO Auto-generated method stub
	}

	//@Override
	/*public List DernierTransac() {
		// TODO Auto-generated method stub
		return ((ListCrudRepository<Compte, Long>) comptrepo).findAll();
	}*/
	@Override
	public
	 ResponseEntity<String> CréerCompt(Compte compte) {
		// TODO Auto-generated method stub
		System.out.println("le compte :"+compte);
		System.out.println("////////le username :"+compte.getUserName());
		if (compte.getUserName().equals(null)) {
	        return new ResponseEntity<>(
	          "Vous devez entrer Votre User name", 
	          HttpStatus.INTERNAL_SERVER_ERROR);//renvoie une erreur 500
	    }
	   else if (compte.getNumero()==0) {
	        return new ResponseEntity<>(
	          "Vous devez entrer Votre Numéro de téléphone", 
	          HttpStatus.INTERNAL_SERVER_ERROR);//renvoie une erreur 500
	    }
	   else if (compte.getCodePin().equals(null)) {
	        return new ResponseEntity<>(
	          "Vous devez entrer votre code Pin", 
	          HttpStatus.INTERNAL_SERVER_ERROR);//renvoie une erreur 500
	    }
	   else if (compte.getNumeroCni()==0) {
	        return new ResponseEntity<>(
	          "Vous devez entrer votre Numéro de CNI", 
	          HttpStatus.INTERNAL_SERVER_ERROR);//renvoie une erreur 500
	    }

		comptrepo.save(compte);
	   return new ResponseEntity<>(
			      "Votre Compte a été enregistré avec succès " + compte, 
			      HttpStatus.OK);	
	}

	@Override
	public String SupprimerCompt(long idUser, String CodePin) {
		// TODO Auto-generated method stub
		((CrudRepository<Compte, Long>) comptrepo).deleteById(idUser);
		return "Compte supprimé Supprimé";
	}
}
